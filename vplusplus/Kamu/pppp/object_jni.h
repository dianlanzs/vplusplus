


/* DO NOT EDIT THIS FILE - it is machine generated */
#ifndef _OBJECT_JNI_H_
#define _OBJECT_JNI_H_

#ifdef PLATFORM_ANDROID

#include <jni.h>

#define ANDROID_CLASS_PATH  "com/ilnk/jni/Avapi" 	// for vdp
//#define ANDROID_CLASS_PATH  "com/rccar/jni/Avapi"			// for remote control toys

#else

#define JNIEXPORT
#define JNICALL

typedef void * jobject;
typedef char * jbyteArray;
typedef char * jobjectArray;
typedef const char * jstring;
typedef  int   jint;
typedef void * jmethodID;
typedef char   jbyte;

class JNIEnv{
public:
    void   SetByteArrayRegion(char * a, int b, int c,const jbyte * d);
    void * GetByteArrayElements(char * a, int b);
    void   ReleaseByteArrayElements(char * a, char * b, int c);
    char * GetStringUTFChars(char * a, int b);
    void   ReleaseStringUTFChars(char * a, char * b);
    char * NewStringUTF(char * a);
    void   DeleteLocalRef(char * a);
    char * NewByteArray(int b);
    void   CallVoidMethod(void * a, void * b, ...);
};

extern JNIEnv iOSEnv;

void FhFishChk(const char * szDID,char *buf,int len);//ÀÕ128bit…œ»•

void CBSearchResults(int nTrue,const char * szMac,const char * szName,const char * szDID,const char * szIP,int nPort,int nType);

void CBUILayerNotify(const char * szDID,int nCmd,const char * szJson);

void CBCmdRecv(const char * szDID,int sessionID,int nCmd,char * buf,int len);

void CBVideoDataProcess(const char * szDID,char * lpImage,int nType,int nLens,int nW,int nH,int nTimestamp);

void CBConnectionNotify(const char * szDID,int nType,int nParam);

void CBAlarmNotifyByDevice(const char * szDID,const char * szSID,const char * szType,const char * szTime);

#endif

#ifdef __cplusplus
extern "C"
{
#endif
    /*
     * Class:     com_magc_jni_HelloWorld12
     * Method:    DisplayHello13
     * Signature: ()V14
     */
    
    JNIEXPORT int  JNICALL YUV4202RGB565(JNIEnv *, jobject, jbyteArray, jbyteArray, jint, jint);
    
    JNIEXPORT int  JNICALL PPPPSetCallbackContext(JNIEnv *, jobject, jobject);

    JNIEXPORT int  JNICALL StartPPPP(
                                     JNIEnv * env,
                                     jobject obj,
                                     jstring did,
                                     jstring user,
                                     jstring pwd,
                                     jstring server
                                     );
    
    
    JNIEXPORT int  JNICALL ClosePPPP(JNIEnv *, jobject, jstring);
    
    JNIEXPORT int  JNICALL StartPPPPLivestream(JNIEnv *, jobject, jstring, jstring, jint, jint, jint);
    
    JNIEXPORT int  JNICALL ClosePPPPLivestream(JNIEnv *, jobject, jstring);
    
    JNIEXPORT int  JNICALL StartRecorder(JNIEnv *, jobject, jstring, jstring);
    
    JNIEXPORT int  JNICALL CloseRecorder(JNIEnv *, jobject, jstring);
    
    JNIEXPORT int  JNICALL SendCtrlCommand_EX(JNIEnv * ,jobject,jstring,jint,jint,jobject);
    
    
    JNIEXPORT int  JNICALL SetAudioStatus(JNIEnv *, jobject, jstring, jint);
    
    JNIEXPORT int  JNICALL GetAudioStatus(JNIEnv *, jobject, jstring);
    
    
    JNIEXPORT int JNICALL NodeSearch(
                                     JNIEnv *env ,
                                     jobject,
                                     jint MaxNmbOfNode,//◊Ó∂‡À—À˜ ˝¡ø
                                     jint TimeOut_S,//À—À˜≥¨ ±≥§,∫¡√Î
                                     jobjectArray SearchExtResult //∑µªÿÀ—À˜Ω·π˚£¨∞¸¿®p2pID,IP∫Õ…Ë±∏√˚
    );
    
    JNIEXPORT int  JNICALL Init(
                                JNIEnv *, 
                                jobject, 
                                jstring, //serverStr
                                jint, //ipv6Pri
                                jint, //check session interval£¨Œ™0‘Ú≤ªÀ¢–¬£¨≤ªƒ‹¥Û”⁄15√Î
                                jint,	//maxSession
                                jint	//channelBuf
    );
    
    JNIEXPORT void  JNICALL DeInit(JNIEnv *, jobject);
    
    JNIEXPORT int  JNICALL RspBell(
                                   JNIEnv * env, //
                                   jobject obj, //
                                   jstring did, //Õ∆ÀÕ∑µªÿµƒ…Ë±∏ID
                                   jstring ticket, //Õ∆ÀÕ∑µªÿµƒª·ª∞æ‰±˙
                                   jstring user, //…œ≤„≤È’“ ˝æ›ø‚µ√µΩµƒ∂‘”¶”√ªß√˚
                                   jstring pwd, //…œ≤„≤È’“ ˝æ›ø‚µ√µΩµƒ∂‘”¶”√ªß√‹¬Î
                                   jstring server
                                   );
    
    
#ifdef __cplusplus
}
#endif

#endif


